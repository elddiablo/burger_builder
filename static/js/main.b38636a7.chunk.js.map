{"version":3,"sources":["components/hoc/Wrapper.js","components/Burger/BurgerIngridients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","axios.orders.js","components/hoc/withErrorHandler/withErrorHandler.js","components/UI/Spinner/Spinner.js","components/store/actions/auth.js","components/store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","components/store/actions/burgerBuilder.js","components/store/actions/order.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/Sidedrawer/Sidedrawer.js","components/Layout/Layout.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js","containers/Orders/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","components/Logout/Logout.js","App.js","serviceWorker.js","components/store/utility.js","components/store/reducers/burgerBuilder.js","components/store/reducers/order.js","components/store/reducers/auth.js","index.js","components/Burger/BurgerIngridients/BurgerIngredient.css","components/Navigation/Sidedrawer/Sidedrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/UI/Input/Input.css","containers/Orders/Order/Order.css","components/Burger/Burger.css","components/UI/Backdrop/Backdrop.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Logo/Logo.css","assets/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.css","components/Layout/Layout.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Auth/Auth.module.css"],"names":["Wrapper","WrappedComponent","classes","arguments","length","undefined","_Component","hoc","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","react_default","a","createElement","className","props","Component","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","transformedIngredients","keys","ingredients","map","toConsumableArray","Array","_","i","BurgerIngridients_BurgerIngredient","reduce","arr","el","concat","Fragment","Burger","buildControl","BuildControl","Label","label","onClick","removed","disabled","Less","added","More","controls","buildControls","BuildControls","price","toFixed","control","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","OrderButton","ordered","purchasable","isAuthenticated","button","Button","btnType","join","clicked","children","orderSummary","console","log","_this","ingredientSummary","style","textTransform","Button_Button","puchaseCanceled","purchaseContinued","backdrop","showing","Backdrop","Modal","nextProps","show","Backdrop_Backdrop","modalClosed","transform","opactity","instance","axios","create","baseURL","withErrorHandler","_class2","_getPrototypeOf2","_len","args","_key","call","state","error","errorConfirmedHandler","setState","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","Spinner","Loader","setAuthRedirectPath","path","auth","email","password","isSignUp","dispatch","authData","returnSecureToken","url","post","then","token","userId","expirationTime","data","idToken","localId","expiresIn","setTimeout","catch","err","BurgerBuilder","purchasing","purchaseHandler","isAuth","onSetAuthRedirectPath","history","push","updatePurchasable","ings","igKey","sum","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","pathname","buildingBurger","onInitIngridients","disabledInfo","objectSpread","burger","UI_Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","totalPrice","onIngredientAdded","onIngredientRemoved","OrderSummary","connect","burgerBuilder","building","ingName","ingredientName","get","actions","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","activeClassName","active","exact","navigationItems","NavigationItems","NavigationItem_NavigationItem","drawerToggle","DrawerToggle","toolbar","Toolbar","DrawerToggle_DrawerToggle","openSideDrawer","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","sideDrawer","attachedClasses","SideDrawer","Close","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerOpenedHandler","Sidedrawer_Sidedrawer","Toolbar_Toolbar","Content","input","inputElement","validationError","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","inputName","elementType","assign","onChange","changed","elementConfig","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","e","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElements","hasOwnProperty","id","config","form","onSubmit","formElement","Input_Input","loading","orderId","purchaseBurgerSuccess","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","Checkout","goBack","replace","summary","Redirect","purchasedRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","Route","match","component","Order","Ingredient","deleteOrder","Orders","orders","deleteOrderHandler","onFetchOrders","Orders_Order_Order","fetchOrdersSuccess","Auth","isEmail","submitHandler","onAuth","switchAuthModeHanlder","prevState","componentDidMount","redirectPath","errorMessage","authRedirect","authRedirectPath","Logout","onLogout","App","components_Layout_Layout","Switch","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","updatedIngredient","defineProperty","updatedState","addIngredient","updatedIng","updatedSt","removeIngredient","setIngredients","fetchIngredientsFailed","purchaseInit","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersFail","authStart","authFail","authSuccess","authLogout","rootReducer","combineReducers","burgerReducer","orderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","Input","load8","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b38636a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Wrapper = (WrappedComponent, classes = null) => {\n    class hoc extends Component {\n        render() {\n            return(\n                <div className ={classes}>\n                    <WrappedComponent {...this.props} />\n                </div>\n            );\n        }\n    }\n\n    return hoc;\n\n}\n\nexport default Wrapper;","import React from 'react';\nimport classes from '../BurgerIngridients/BurgerIngredient.css';\n\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch(props.type) {\n        case 'bread-bottom':\n            ingredient = <div className={classes.BreadBottom}></div> \n        break;\n        case 'bread-top':\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            );\n        break;\n        case 'meat': \n                ingredient = <div className={classes.Meat}></div>;\n        break;\n        case 'cheese': \n                ingredient = <div className={classes.Cheese}></div>;\n        break;\n        case 'bacon': \n                ingredient = <div className={classes.Bacon}></div>;\n        break;\n        case 'salad': \n                ingredient = <div className={classes.Salad}></div>;\n        break;\n        default:\n                ingredient = null;\n        break;\n    }\n    \n    return ingredient;\n}\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;","import React from 'react';\nimport classes from '../Burger/Burger.css';\n\nimport Wrapper from '../hoc/Wrapper';\n\nimport BurgerIngredient from '../../components/Burger/BurgerIngridients/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = \n    Object.keys(props.ingredients).map(ingredient => {\n        return [...Array(props.ingredients[ingredient])].map((_, i) => {\n             return <BurgerIngredient key={ingredient + i} type={ingredient} />\n        });\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el);\n    }, []);\n\n    if(transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients</p>;\n    }\n\n    return(\n       <>   \n        <BurgerIngredient type={\"bread-top\"} />\n            {transformedIngredients}\n        <BurgerIngredient type={\"bread-bottom\"} />\n       </> \n    );\n}\n\nexport default Wrapper(burger, classes.Burger);","import React from 'react';\n\nimport classes from '../BuildControl/BuildControl.css';\n\nconst buildControl = (props) => {\n    \n    return(\n        \n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button onClick={props.removed} disabled={props.disabled} className={classes.Less}>Less</button>\n            <button onClick={props.added} className={classes.More}>More</button>\n        </div>\n    );\n    \n}\n\n\nexport default buildControl;","import React from 'react';\nimport classes from '../BuildControls/BuildControls.css';\n\nimport BuildControl from '../BuildControls/BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Meat', type: 'meat'}\n];\n\nconst buildControls = (props) => {\n\n    return(\n        <div className={classes.BuildControls}>\n        <p>Current Price <strong>{props.price.toFixed(2)}</strong></p>\n            {controls.map(control => {\n                return <BuildControl \n                key={control.label} \n                label={control.type}\n                added={() => props.ingredientAdded(control.type)}\n                removed={() => props.ingredientRemoved(control.type)}\n                disabled={props.disabled[control.type]}\n                />\n            })}\n            <button \n                className={classes.OrderButton} \n                onClick={props.ordered}\n                disabled={!props.purchasable}\n                >\n                    { props.isAuthenticated ? \"ORDER NOW\" : \"LOGIN TO ORDER\" }\n            </button>\n        </div>\n    );\n}\n\nexport default buildControls;","import React from 'react';\nimport classes from '../Button/Button.css';\n\nconst button = (props) => {\n    return(\n        <button \n            disabled={props.disabled}\n            className={[classes.Button, classes[props.btnType]].join(' ')}\n            onClick={props.clicked}>\n            {props.children}\n        </button>\n    );\n}\n\nexport default button;","import React, {Component} from 'react';\nimport Button from '../../UI/Button/Button';\n\nclass orderSummary extends Component {\n\n    componentWillUpdate() {\n        console.log('[order summary Will Update]');\n    }    \n\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(key => {\n            return <li key={key}><span style={{textTransform: 'capitalize'}}>{key}</span> : {this.props.ingredients[key]}</li>\n        });\n        return (\n            <>\n                <h3>\n                    Your Order:\n                </h3>\n                <p>\n                    A burger with the following Ingredient\n                </p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p>\n                    <strong>Total Price</strong>:{this.props.price.toFixed(2)}\n                </p>\n                <p>\n                    Continue to Checkout?\n                </p>\n                <Button btnType={\"Danger\"} clicked={this.props.puchaseCanceled}>Cancel</Button>\n                <Button btnType={\"Success\"} clicked={this.props.purchaseContinued}>Continue</Button>\n            </>\n        )\n    } \n}\n\nexport default orderSummary;","import React from 'react';\n\nimport classes from '../Backdrop/Backdrop.css';\n\nconst backdrop = (props) => {\n    return (\n        props.showing ? \n        <div \n            className={classes.Backdrop} \n            onClick={props.clicked}>\n        </div> : null\n    );\n}\n\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport classes from '../Modal/Modal.css'\n\nclass Modal extends Component {\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  }\n\n  componentWillUpdate() {\n      console.log(\"MODAL will update\");\n  }\n\n  render() {\n      return (\n        <>\n            <Backdrop showing={this.props.show} clicked={this.props.modalClosed}/>\n            <div \n                className={classes.Modal}\n                style={{\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opactity: this.props.show ? '1' : '0'\n                }}\n            >   \n                {this.props.children}\n            </div>\n        </>\n    );\n  }  \n}\n\nexport default Modal;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burgerbuilder-7ddd1.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Modal from '../../UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => req);\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        render() {\n        return (\n                <>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React from 'react';\n\nimport classes from '../Spinner/Spinner.css';\n\nconst Spinner = () => (\n    <div className={classes.Loader}>\n        Loading ...\n    </div>\n);\n\nexport default Spinner;","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token,\n        userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: actionTypes.AUTH_LOG_OUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true\n        }\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBGKp24iE3UE6mrW9wM08ZXR8b0FsEFi70';\n        if(!isSignUp) {\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBGKp24iE3UE6mrW9wM08ZXR8b0FsEFi70'\n        }\n        axios.post(url, authData)\n            .then(res => {\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\n                dispatch(checkAuthTimeout(res.data.expiresIn));\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(authFail(err.response.data.error));\n            });\n    }\n}","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const UPDATE_PRICE = \"UPDATE_PRICE\";\n\n\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\n\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_LOG_OUT = \"AUTH_LOG_OUT\";\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";","import React, {Component} from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Modal from '../../components/UI/Modal/Modal';\nimport axios from '../../axios.orders';\n\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandler';\n\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../components/store/actions/index';\n\n\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false\n    }\n\n\n    componentDidMount() {\n        if(!this.props.buildingBurger) {\n            this.props.onInitIngridients();\n        }\n    }\n\n    purchaseHandler = () => {\n        if(this.props.isAuth) {\n            this.setState({purchasing: true});\n        } else {\n            this.props.onSetAuthRedirectPath(\"/checkout\");\n            this.props.history.push('/auth');\n        }\n        \n    }\n\n    updatePurchasable = (ings) => {\n        const sum = Object.keys( ings )\n            .map( igKey => {\n                return ings[igKey];\n            })\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    }\n\n    purchaseCancelHandler  = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push({ pathname: '/checkout' });\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n\n        for(let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        let orderSummary = null;\n\n        let burger = null;\n\n        burger = !this.props.error ? <Spinner /> : <p> Error has occured while loading ingredients... </p>;\n\n        if(this.props.ings) {\n            burger = (<>\n                <Burger ingredients={this.props.ings} />\n                <BuildControls\n                    isAuthenticated =       {this.props.isAuth}\n                    price =                 {this.props.totalPrice}\n                    disabled =              {disabledInfo}\n                    ingredientAdded =       {this.props.onIngredientAdded}\n                    ingredientRemoved =     {this.props.onIngredientRemoved}\n                    ordered =               {this.purchaseHandler}\n                    purchasable =           {this.updatePurchasable(this.props.ings)}\n                />\n            </>);\n            orderSummary = \n            (<OrderSummary\n                price={this.props.totalPrice} \n                ingredients={this.props.ings}\n                puchaseCanceled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler}\n            />);\n        }\n\n        return(\n            <>\n                    <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                        {orderSummary}\n                    </Modal>\n                    {burger}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuth: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngridients: () => dispatch(actions.initIngridients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from '../../../axios.orders';\n\nexport const addIngredient = (name) => {\n    return {\n        ingredientName: name,\n        type: actionTypes.ADD_INGREDIENT\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        ingredientName: name,\n        type: actionTypes.REMOVE_INGREDIENT\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngridients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(res => {\n                dispatch(setIngredients(res.data));\n            }).catch(err => {\n                dispatch(fetchIngredientsFailed())\n            });\n    };\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../../axios.orders';\n\nexport const purchaseBurgerSuccess = (id, orderData)  => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(res => {\n                dispatch(purchaseBurgerSuccess(res.data.name, orderData));\n            }).catch(err => {\n                dispatch(purchaseBurgerFail(err))\n            });\n    }\n}\n\nexport const fetchOrders = (token) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get('/orders.json?auth=' + token)\n            .then(res => {\n                let orders = [];\n                orders = Object.keys(res.data).map(key => ({\n                        ...res.data[key],\n                        id: key\n                    }\n                ));\n                console.log(orders);\n                dispatch(fetchOrdersSuccess(orders));\n            })\n            .catch(err => fetchOrdersFail(err));\n    }\n}","import React from 'react';\nimport classes from '../Logo/Logo.css';\nimport burgerLogo from '../../assets/burger-logo.png';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\"/>\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from '../NavigationItem/NavigationItem.css';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            activeClassName={classes.active}\n            exact\n        >\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\n\nimport classes from '../NavigationItems/NavigationItems.css';\n\nconst navigationItems = (props) => {\n    return (\n        <ul className={classes.NavigationItems}>    \n            <NavigationItem link=\"/\">\n                Burger Builder\n            </NavigationItem>\n\n            {props.isAuth ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n            \n\n            {!props.isAuth \n                ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n                : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n        </ul>\n    );\n}\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from '../DrawerToggle/DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigatonItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../Sidedrawer/DrawerToggle/DrawerToggle.js';\n\nimport classes from '../Toolbar/Toolbar.css';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.openSideDrawer}/>\n        <div className={classes.Logo}>\n            <Logo/>\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigatonItems isAuth={props.isAuth}/>\n        </nav>\n    </header>\n)\n\nexport default toolbar","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nimport classes from '../Sidedrawer/Sidedrawer.css';\n\nconst sideDrawer = (props) => {\n    \n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.showing) \n        attachedClasses = [classes.SideDrawer, classes.Open];\n\n    return(\n    <>\n            <Backdrop showing={props.showing} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n\n            <div className={classes.Logo}>\n                <Logo/>\n            </div>\n            <nav>\n                <NavigationItems />\n            </nav>\n        </div>\n    </>\n    );\n}\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/Sidedrawer/Sidedrawer';\n\nimport classes from '../Layout/Layout.css'\n// import Wrapper from '../hoc/Wrapper';\n\nclass Layout extends Component {\n\nstate = {\n    showSideDrawer: false\n}\n\nsideDrawerClosedHandler = () => {\n    this.setState({showSideDrawer: false});\n}\n\nsideDrawerOpenedHandler = () => {\n    this.setState({showSideDrawer: true});\n}\n\nrender() {\n    return(\n        <>  \n            <SideDrawer \n                showing={this.state.showSideDrawer} \n                closed={this.sideDrawerClosedHandler} \n            />\n            <Toolbar openSideDrawer={this.sideDrawerOpenedHandler}\n                isAuth={this.props.isAuthenticated}\n            />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n        </>\n    )   \n}\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n    \n\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let validationError = '';\n\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n        validationError = 'Please, fill in the ' + props.inputName;\n    }\n\n    switch(props.elementType) {\n        case ('input'): \n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n        case ('textarea'): \n            inputElement = <textarea onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n        case ('select'): \n            inputElement = <select className={inputClasses.join(' ')} onChange={props.changed} >\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\n                ))}\n            </select>\n            break;\n        default: \n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n    }   \n    return(\n        <div>\n            <label>{validationError}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;","import React, {Component} from 'react';\nimport axios from '../../../axios.orders';\nimport { connect } from 'react-redux';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../components/hoc/withErrorHandler/withErrorHandler';\n\nimport * as actions from '../../../components/store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your ZipCode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {\n                    required: true\n                },\n                valid: true\n            },\n        },\n        formIsValid: false,\n        purchasing: false\n    }\n\n    orderHandler = (e) => {\n        e.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.totalPrice,\n            orderData: formData\n        }\n\n        this.props.onOrderBurger(order, this.props.token);\n\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n                if (rules.required) {\n                    isValid = value.trim() !== '' && isValid;\n                }\n\n                if(rules.minLength) {\n                    isValid = value.length >= rules.minLength && isValid;\n                }\n        \n                if(rules.maxLength) {\n                    isValid = value.length <= rules.maxLength && isValid;\n                }\n\n\n        return isValid;\n\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        } \n\n        // checking for valid values\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n\n        // updating touched prop\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        // updating the overall validity\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n\n        console.log(updatedFormElement);\n\n    }\n\n    render() {\n        const formElements = [];\n        for (const key in this.state.orderForm) {\n            if (this.state.orderForm.hasOwnProperty(key)) {\n                formElements.push({\n                    id: key,\n                    config: this.state.orderForm[key]\n                });\n            }\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n\n                {formElements.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value} \n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} \n                        inputName={formElement.id}\n                    />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if(this.props.loading) {\n            form = <Spinner />;\n        }\n\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter Your Contact Data:</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToIngredients = state => {\n\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToIngredients, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst CheckoutSummary = (props) => (\n    <div className={classes.CheckoutSummary}>\n        <h1>We hope it tastes well</h1>\n        <div style={{width: '100%', margin: 'auto'}}> \n            <Burger ingredients={props.ingredients} />\n        </div>\n        <Button btnType={'Danger'} clicked={props.checkoutCanceled}>Cancel</Button>\n        <Button btnType={'Success'} clicked={props.checkoutContinued}>Continue</Button>\n    </div>\n);\n\nexport default CheckoutSummary;","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport ContactData from './ContactData/ContactData';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\n\nimport * as actions from \"../../components/store/actions/index\";\n\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n    \n    \n\n    checkoutCanceled = () => {\n        this.props.history.goBack();\n    }\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />;\n        \n        if(this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null;\n            summary = \n            <>\n                {purchasedRedirect}\n                <CheckoutSummary \n                    ingredients={this.props.ings} \n                    checkoutCanceled = {this.checkoutCanceled}\n                    checkoutContinued = {this.checkoutContinued}\n                />\n                <Route \n                    path={this.props.match.url + '/contact-data'}\n                    component={ContactData}\n                />\n            </>\n        }\n\n        return summary;\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout);\n\n","import React from 'react';\nimport classes from './Order.css';\nimport Button from '../../../components/UI/Button/Button';\n\nconst Order = (props) => {\n\n    const ingredients = Object.keys(props.ingredients).map(key => (\n        <span key={key} className={classes.Ingredient}>{key} : {props.ingredients[key]} </span>\n    ));\n    \n\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredients} </p>\n            <p>Price: <strong>{props.price}</strong></p>\n            <Button btnType={'Danger'} clicked={props.deleteOrder}>Delete Order</Button>\n        </div>\n    );\n\n};\n\n\nexport default Order;","import React, {Component} from 'react';\nimport Order from './Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios.orders';\nimport withErrorHandler from '../../components/hoc/withErrorHandler/withErrorHandler';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../components/store/actions/index';\n\nclass Orders extends Component {\n\n    state = {\n        orders: [],\n        loading: false\n    }\n\n    deleteOrderHandler = (key) => {\n        // delete request with id\n        console.log(key);\n    }\n\n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token);\n    }\n\n    render() {\n\n        let orders = this.props.loading ? <Spinner /> : this.props.orders.map(order => (\n            <Order \n                key={order.id}\n                ingredients={order.ingredients}\n                price={order.price}\n            />\n        ));\n\n\n\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport * as actions from '../../components/store/actions/index';\n\nimport classes from './Auth.module.css';\n\nexport class Auth extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Your password'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false\n        }\n      },\n      formIsValid: true,\n      isSignUp: true\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n                if (rules.required) {\n                    isValid = value.trim() !== '' && isValid;\n                }\n\n                if(rules.minLength) {\n                    isValid = value.length >= rules.minLength && isValid;\n                }\n        \n                if(rules.maxLength) {\n                    isValid = value.length <= rules.maxLength && isValid;\n                }\n\n\n        return isValid;\n\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.controls\n        }\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        } \n\n        // checking for valid values\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n\n        // updating touched prop\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        // updating the overall validity\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({controls: updatedOrderForm, formIsValid: formIsValid});\n\n        console.log(updatedFormElement);\n\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n\n    switchAuthModeHanlder = () => {\n        this.setState(prevState => {\n            return {isSignUp: !prevState.isSignUp}\n        })\n    }\n\n    componentDidMount = () => {\n      if(!this.props.buildingBurger && this.props.redirectPath !== '/') {\n          this.props.setAuthRedirectPath('/');\n      }\n    }\n    \n\n    render() {\n\n        const formElements = [];\n        for (const key in this.state.controls) {\n            if (this.state.controls.hasOwnProperty(key)) {\n                formElements.push({\n                    id: key,\n                    config: this.state.controls[key]\n                });\n            }\n        }\n        let form = (\n            <form onSubmit={this.submitHandler}>\n\n                {formElements.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value} \n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} \n                        inputName={formElement.id}\n                    />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>{this.state.isSignUp ? \"REGISTER\" : \"LOGIN\"}</Button>\n            </form>\n        );\n\n        if(this.props.loading) {\n            form = <Spinner/>\n        }\n\n        let errorMessage = null;\n        if(this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if(this.props.isAuth) {\n            authRedirect = <Redirect to={this.props.redirectPath}/>\n        }\n\n        return (\n            <div className={classes.Auth}>\n                    {authRedirect}\n                    {errorMessage}\n                    {form}\n                    <Button \n                        btnType=\"Danger\"\n                        clicked={this.switchAuthModeHanlder}\n                    >\n                        {this.state.isSignUp ? \"SWITCH TO LOGIN\" : \"SWITCH TO REGISTER\"}\n                    </Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuth: state.auth.token !== null,\n        redirectPath: state.auth.authRedirectPath,\n        buildingBurger: state.burgerBuilder.building\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\n        setAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../store/actions/index';\n\nexport class Logout extends Component {\n\n  componentWillMount() {\n      this.props.onLogout();\n  }\n\n  render() {\n    return <Redirect to={'/'}/>\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)\n","import React, { Component } from 'react';\nimport BurgerBuilder from '../src/containers/BurgerBuilder/BurgerBuilder';\nimport Layout from '../src/components/Layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth';\nimport Logout from './components/Logout/Logout';\n\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return(\n      <Layout>\n        <Switch>\n          <Route path='/checkout' component={Checkout}/>\n          <Route path='/auth' component={Auth}/>\n          <Route path='/orders' component={Orders}/>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/' exact component={BurgerBuilder}/>\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility'\n  \nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    loading: false,\n    error: false,\n    building: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.6\n}\n\nconst addIngredient = (state, action) => {\n    let updatedIngredient = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n    };\n    let updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n    let updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedState);\n}\n\nconst removeIngredient = (state, action) => {\n    let updatedIng = {\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n    };\n    let updatedIngs = updateObject(state.ingredients, updatedIng);\n    let updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject(state, updatedSt);\n}   \n\nconst setIngredients = (state, action) => {\n    return updateObject (state, {\n        ingredients: action.ingredients,\n        totalPrice: 4,\n        error: false,\n        building: false\n    })\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, {error: true});\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return addIngredient(state, action);\n        case actionTypes.REMOVE_INGREDIENT:\n            return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS:\n            return setIngredients(state, action);\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return fetchIngredientsFailed(state, action);\n        default:\n            return state;\n        break;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, {purchased: false});\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\n    return updateObject(state, {\n        orders: state.orders.concat(newOrder),\n        loading: false,\n        purchased: true\n    })\n}\n\nconst purchaseBurgerStart = (state) => {\n    return updateObject(state,{loading: true});\n}\n\nconst purchaseBurgerFail = (state) => {\n    return updateObject(state,{loading: false});\n}\n\n\nconst fetchOrdersStart = (state) => {\n    return updateObject(state, { loading: true });\n}\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state,{loading: false, orders: action.orders});\n}\n\nconst fetchOrdersFail = (state) => {\n    return updateObject(state,{loading: false});\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state);\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state);\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state);\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state);\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state) => {\n    return  updateObject(state, {error: null, loading: true});\n}\n\nconst authSuccess = (state, action) => {\n    return  updateObject(state, {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return  updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state) => {\n    return updateObject(state, {token: null, userId: null});\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path });\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START: return authStart(state);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_LOG_OUT: return authLogout(state);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nimport burgerReducer from './components/store/reducers/burgerBuilder';\nimport orderReducer from './components/store/reducers/order';\nimport authReducer from './components/store/reducers/auth';\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__1Mmts\",\"BreadTop\":\"BurgerIngredient__BreadTop__3a8KM\",\"Seeds1\":\"BurgerIngredient__Seeds1__2qIKz\",\"Seeds2\":\"BurgerIngredient__Seeds2__110_4\",\"Meat\":\"BurgerIngredient__Meat__2P-kC\",\"Cheese\":\"BurgerIngredient__Cheese__2wVb-\",\"Salad\":\"BurgerIngredient__Salad__1Hwk2\",\"Bacon\":\"BurgerIngredient__Bacon__zbnQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"Sidedrawer__SideDrawer__3P8No\",\"Open\":\"Sidedrawer__Open__115Jt\",\"Close\":\"Sidedrawer__Close__3VC0q\",\"Logo\":\"Sidedrawer__Logo__3W_f1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__QOQo_\",\"Ingredient\":\"Order__Ingredient__3oh6K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load8\":\"Spinner__load8__Yvr9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__CknPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__wL9gE\"};"],"sourceRoot":""}