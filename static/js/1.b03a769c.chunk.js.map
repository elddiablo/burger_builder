{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/shared/utility.js","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","validationError","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","inputName","elementType","a","createElement","Object","assign","onChange","changed","className","join","elementConfig","options","map","option","key","value","displayValue","module","exports","Input","Label","updateObject","oldObject","updatedProperties","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","ContactData","CheckoutSummary","state","orderForm","name","type","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","purchasing","orderHandler","e","preventDefault","formData","formElementIdentifier","_this","order","ingredients","ings","price","totalPrice","toFixed","orderData","userId","onOrderBurger","token","inputChangedHandler","event","inputIdentifier","updatedFormElement","target","updatedOrderForm","defineProperty","setState","_this2","this","formElements","hasOwnProperty","id","config","form","react_default","onSubmit","formElement","Button","btnType","disabled","loading","Spinner","Component","connect","burgerBuilder","auth","dispatch","actions","withErrorHandler","axios","style","width","margin","Burger","clicked","checkoutCanceled","checkoutContinued","Checkout","history","goBack","replace","summary","Redirect","to","purchasedRedirect","purchased","Fragment","Order_CheckoutSummary_CheckoutSummary","Route","path","match","url","component"],"mappings":"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","file":"static/js/1.b03a769c.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let validationError = '';\n\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n        validationError = 'Please, fill in the ' + props.inputName;\n    }\n\n    switch(props.elementType) {\n        case ('input'): \n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n        case ('textarea'): \n            inputElement = <textarea onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n        case ('select'): \n            inputElement = <select className={inputClasses.join(' ')} onChange={props.changed} >\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\n                ))}\n            </select>\n            break;\n        default: \n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n    }   \n    return(\n        <div>\n            <label>{validationError}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n\n            if (rules.required) {\n                isValid = value.trim() !== '' && isValid;\n            }\n\n            if(rules.minLength) {\n                isValid = value.length >= rules.minLength && isValid;\n            }\n    \n            if(rules.maxLength) {\n                isValid = value.length <= rules.maxLength && isValid;\n            }\n\n\n    return isValid;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","import React, {Component} from 'react';\nimport axios from '../../../axios.orders';\nimport { connect } from 'react-redux';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport Button from '../../../components/UI/Button/Button';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../components/hoc/withErrorHandler/withErrorHandler';\n\nimport { updateObject, checkValidity } from '../../../components/shared/utility';\n\nimport * as actions from '../../../components/store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your ZipCode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {\n                    required: true\n                },\n                valid: true\n            },\n        },\n        formIsValid: false,\n        purchasing: false\n    }\n\n    orderHandler = (e) => {\n        e.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.totalPrice.toFixed(2),\n            orderData: formData,\n            userId: this.props.userId\n        }\n\n        this.props.onOrderBurger(order, this.props.token);\n\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\n            touched: true\n        });\n\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        })\n\n\n        // updating the overall validity\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n\n    }\n\n    render() {\n        const formElements = [];\n        for (const key in this.state.orderForm) {\n            if (this.state.orderForm.hasOwnProperty(key)) {\n                formElements.push({\n                    id: key,\n                    config: this.state.orderForm[key]\n                });\n            }\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n\n                {formElements.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value} \n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} \n                        inputName={formElement.id}\n                    />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if(this.props.loading) {\n            form = <Spinner />;\n        }\n\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter Your Contact Data:</h4>\n                {form}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst CheckoutSummary = (props) => (\n    <div className={classes.CheckoutSummary}>\n        <h1>We hope it tastes well</h1>\n        <div style={{width: '100%', margin: 'auto'}}> \n            <Burger ingredients={props.ingredients} />\n        </div>\n        <Button btnType={'Danger'} clicked={props.checkoutCanceled}>Cancel</Button>\n        <Button btnType={'Success'} clicked={props.checkoutContinued}>Continue</Button>\n    </div>\n);\n\nexport default CheckoutSummary;","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport ContactData from './ContactData/ContactData';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\n\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n    \n    \n\n    checkoutCanceled = () => {\n        this.props.history.goBack();\n    }\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />;\n        \n        if(this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null;\n            summary = \n            <>\n                {purchasedRedirect}\n                <CheckoutSummary \n                    ingredients={this.props.ings} \n                    checkoutCanceled = {this.checkoutCanceled}\n                    checkoutContinued = {this.checkoutContinued}\n                />\n                <Route \n                    path={this.props.match.url + '/contact-data'}\n                    component={ContactData}\n                />\n            </>\n        }\n\n        return summary;\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout);\n\n"],"sourceRoot":""}