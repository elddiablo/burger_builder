{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/shared/utility.js","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","validationError","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","inputName","elementType","a","createElement","Object","assign","onChange","changed","className","join","elementConfig","options","map","option","key","value","displayValue","module","exports","Input","Label","updateObject","oldObject","updatedProperties","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","Auth","_Component","_getPrototypeOf2","_this","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","args","Array","_key","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","concat","state","controls","email","type","placeholder","validation","isEmail","valid","password","formIsValid","isSignUp","inputChangedHandler","event","inputIdentifier","updatedControlsElem","target","updatedControls","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","setState","submitHandler","preventDefault","onAuth","switchAuthModeHanlder","prevState","componentDidMount","buildingBurger","redirectPath","setAuthRedirectPath","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_nikitaparovyi_Desktop_Web_Training_React_Maximilian_Course_REACT_BurgerBuilder_burger_builder_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","_this2","formElements","hasOwnProperty","id","config","form","react__WEBPACK_IMPORTED_MODULE_6___default","onSubmit","formElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_7__","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_8__","btnType","disabled","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_9__","errorMessage","error","message","authRedirect","isAuth","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","clicked","Component","connect","auth","token","authRedirectPath","burgerBuilder","building","dispatch","actions","path"],"mappings":"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","file":"static/js/3.06a051d5.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let validationError = '';\n\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n        validationError = 'Please, fill in the ' + props.inputName;\n    }\n\n    switch(props.elementType) {\n        case ('input'): \n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n        case ('textarea'): \n            inputElement = <textarea onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n        case ('select'): \n            inputElement = <select className={inputClasses.join(' ')} onChange={props.changed} >\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\n                ))}\n            </select>\n            break;\n        default: \n            inputElement = <input onChange={props.changed} className={inputClasses.join(' ')} {...props.elementConfig} />\n            break;\n    }   \n    return(\n        <div>\n            <label>{validationError}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n\n            if (rules.required) {\n                isValid = value.trim() !== '' && isValid;\n            }\n\n            if(rules.minLength) {\n                isValid = value.length >= rules.minLength && isValid;\n            }\n    \n            if(rules.maxLength) {\n                isValid = value.length <= rules.maxLength && isValid;\n            }\n\n\n    return isValid;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__wL9gE\"};","import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport * as actions from '../../components/store/actions/index';\n\nimport { updateObject, checkValidity } from '../../components/shared/utility';\n\nimport classes from './Auth.module.css';\n\nexport class Auth extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n        password: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'password',\n                placeholder: 'Your password'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 6\n            },\n            valid: false,\n            touched: false\n        }\n      },\n      formIsValid: true,\n      isSignUp: true\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n\n        const updatedControlsElem = updateObject(this.state.controls[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, this.state.controls[inputIdentifier].validation),\n            touched: true\n        });\n\n        const updatedControls = updateObject(this.state.controls,{\n            [inputIdentifier]: updatedControlsElem\n        })\n\n        // updating the overall validity\n        let formIsValid = true;\n        for(let inputIdentifier in updatedControls) {\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({controls: updatedControls, formIsValid: formIsValid});\n\n\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n\n    switchAuthModeHanlder = () => {\n        this.setState(prevState => {\n            return {isSignUp: !prevState.isSignUp}\n        })\n    }\n\n    componentDidMount = () => {\n      if(!this.props.buildingBurger && this.props.redirectPath !== '/') {\n          this.props.setAuthRedirectPath('/');\n      }\n    }\n    \n\n    render() {\n\n        const formElements = [];\n        for (const key in this.state.controls) {\n            if (this.state.controls.hasOwnProperty(key)) {\n                formElements.push({\n                    id: key,\n                    config: this.state.controls[key]\n                });\n            }\n        }\n        let form = (\n            <form onSubmit={this.submitHandler}>\n\n                {formElements.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig} \n                        value={formElement.config.value} \n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} \n                        inputName={formElement.id}\n                    />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>{this.state.isSignUp ? \"REGISTER\" : \"LOGIN\"}</Button>\n            </form>\n        );\n\n        if(this.props.loading) {\n            form = <Spinner/>\n        }\n\n        let errorMessage = null;\n        if(this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if(this.props.isAuth) {\n            authRedirect = <Redirect to={this.props.redirectPath}/>\n        }\n\n        return (\n            <div className={classes.Auth}>\n                    {authRedirect}\n                    {errorMessage}\n                    {form}\n                    <Button \n                        btnType=\"Danger\"\n                        clicked={this.switchAuthModeHanlder}\n                    >\n                        {this.state.isSignUp ? \"SWITCH TO LOGIN\" : \"SWITCH TO REGISTER\"}\n                    </Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuth: state.auth.token !== null,\n        redirectPath: state.auth.authRedirectPath,\n        buildingBurger: state.burgerBuilder.building\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\n        setAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"],"sourceRoot":""}